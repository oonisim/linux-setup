SYS_USER: maonishi
PKG_USER: maonishi

#K8S_GROUP:
K8S_ADMIN : maonishi
K8S_GROUP: k8s


LINUX_USERS:
  - name: "{{ K8S_ADMIN }}"
    group: "{{ K8S_GROUP }}"
    groups: "{{ DOCKER_GROUP }},{{ sudoer_group }}"
    password: "$6$lvOMGppNKTpUOL1u$kf5zKyxl7glYWif4QD3Q0IIoVeG5fy/feZQ5JE.haeHLE4qaNEq8J4Rl6Tg0xJ4L4sxOMA6kmvro34ou2RkPD0"
#  - name: "{{ SYS_USER }}"
#    group: "{{ K8S_GROUP }}"
#    groups: "{{ DOCKER_GROUP }},{{ sudoer_group }}"
#    authorized:
#      - "/home/{{ SYS_USER }}/.ssh/id_rsa.pub"
#    password: "$6$lvOMGppNKTpUOL1u$kf5zKyxl7glYWif4QD3Q0IIoVeG5fy/feZQ5JE.haeHLE4qaNEq8J4Rl6Tg0xJ4L4sxOMA6kmvro34ou2RkPD0"
#    private_key:
#      - "{{ DECRYPT_KEY_FILE }}"
#
#  - name: "{{ PKG_USER }}"
#    group: "{{ K8S_GROUP }}"
#    groups: "{{ sudoer_group }}"
#    authorized:
#      - "/home/{{ PKG_USER }}/.ssh/id_rsa.pub"
#    password:


#--------------------------------------------------------------------------------
# Constants
#--------------------------------------------------------------------------------
NODE_TYPE_MASTER: "master"
NODE_TYPE_WORKER: "worker"
CNI_PROVIDER_FLANNEL: "flannel"

#--------------------------------------------------------------------------------
# [Security]
#--------------------------------------------------------------------------------
DECRYPT_KEY_FILE: "~/.ssh/private.pem"

#--------------------------------------------------------------------------------
# Docker
#--------------------------------------------------------------------------------
DOCKER_GROUP: "docker"
DOCKER_USERS:
  - "{{ K8S_ADMIN }}"

#--------------------------------------------------------------------------------
# Etcd
#--------------------------------------------------------------------------------
ETCD_CONFIG_HOME: "/etc/kubernetes"
ETCD_CA_HOME: "{{ ETCD_CONFIG_HOME }}/pki/etcd"

ETCD_CA_CRT:          "{{ ETCD_CA_HOME }}/ca.crt"
ETCD_CLIENT_CRT:      "{{ ETCD_CA_HOME }}/healthcheck-client.crt"
ETCD_CLIENT_KEY:      "{{ ETCD_CA_HOME }}/healthcheck-client.key"

#--------------------------------------------------------------------------------
# K8S configuration file path
#--------------------------------------------------------------------------------
K8S_CONFIG_HOME: "/etc/kubernetes"
K8S_CONFIG_FILE: "{{ K8S_CONFIG_HOME}}/config"
# K8S_CONFIG_HOME gets removed at the K8S installation cleanup.
K8S_CA_HOME:    "{{ K8S_CONFIG_HOME }}/pki"
KUBELET_CONFIG_FILE: "/etc/systemd/system/kubelet.service.d/10-kubeadm.conf"

APISERVER_CLIENT_CRT: "{{ K8S_CA_HOME }}/apiserver-kubelet-client.crt"
APISERVER_CLIENT_KEY: "{{ K8S_CA_HOME }}/apiserver-kubelet-client.key"
APISERVER_CA_CRT:     "{{ K8S_CA_HOME }}/ca.crt"

KUBELET_CLIENT_CRT:   "{{ K8S_CA_HOME }}/apiserver-kubelet-client.crt"
KUBELET_CLIENT_KEY:   "{{ K8S_CA_HOME }}/apiserver-kubelet-client.key"
KUBELET_CA_CRT:       /var/lib/kubelet/pki/kubelet.crt


#--------------------------------------------------------------------------------
# kubectl config
#--------------------------------------------------------------------------------
KUBECONFIG_ADMIN: "{{ K8S_CONFIG_HOME }}/admin.conf"


#--------------------------------------------------------------------------------
# K8S installation packages
#--------------------------------------------------------------------------------
# K8S_PACKAGES_PREREQUISITES:
# Until 1.8 (not in 1.9), kubelet had dependency on kubernetes-cni, hence
# Ansible yum for kubelet fails if kubernetes-cni has not been already there.
# Not required for 1.9/later but to be able to install 1.8/before.
#
# See
# - https://github.com/kubernetes/release/pull/109
# - https://github.com/kubernetes/release/issues/97
#
# kubelet-1.9.1-0.x86_64.rpm is not signed
# https://github.com/kubernetes/kubernetes/issues/57855
#--------------------------------------------------------------------------------
K8S_PACKAGES_PREREQUISITES:
# kubelet-1.9.1-0.x86_64.rpm is not signed
# https://github.com/kubernetes/kubernetes/issues/57855
# Temporarily disable cni installation due to the issue.
#  - kubernetes-cni-0.6.0-0.x86_64
  - kubernetes-cni

K8S_PACKAGES_PREREQUISITES_REMOVE: "{{ K8S_PACKAGES_PREREQUISITES }}"
#  - kubernetes-cni

K8S_VERSION_196: 1.9.6-0
K8S_VERSION: "{{ K8S_VERSION_196 }}"

K8S_PACKAGES:
  - kubeadm
  - kubelet
  - kubectl
#  - "kubeadm-{{ K8S_VERSION }}.x86_64"
#  - "kubectl-{{ K8S_VERSION }}.x86_64"
#  - "kubelet-{{ K8S_VERSION }}.x86_64"
  - flannel
  - docker

K8S_PACKAGES_REMOVE:
  - kubeadm
  - kubelet
  - kubectl
  - kubernetes-cni
  - flannel
  - docker


K8S_COMMON_SERVICES:
# Start flannel is via kubectl apply -f flanne.yaml
  - kubelet

# Note that Docker requires CNI (e.g. Flannel) as pre-requisite service for K8S.
# See /etc/systemd/system/docker.service.requires/flanneld.service
K8S_NETWORK_PROVIDER: "{{ CNI_PROVIDER_FLANNEL }}"
K8S_NETWORK_SERVICES:
  - flanneld

KUBEPROXY_PORT: 8001

